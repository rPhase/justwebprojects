@import url("https://fonts.googleapis.com/css2?family=Noto+Sans&display=swap");

:root {
  --bg-color: #224935;
  --circle-color: #010f1c;
  --text-color: #fff;
}

* {
  box-sizing: border-box;
}

body {
  font-family: "Noto Sans", sans-serif;
  background: var(--bg-color) url("./img/bg.jpg") no-repeat center center/cover;
  min-height: 100vh;
  overflow: hidden;
  display: flex;
  flex-direction: column;
  align-items: center;
  color: var(--text-color);
  margin: 0;
}

/* Add a dark overloy to make more readible */
body::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: rgba(0, 0, 0, 0.7);
}

/* Prevent overlay from being applied on text */
body * {
  z-index: 1;
}

h1 {
  font-size: 50px;
  margin-top: 50px;
  color: #55b75a;
  text-shadow: 2px 2px 8px rgb(177, 177, 177);
}

.container {
  display: flex;
  align-items: center;
  justify-content: center;
  margin: auto;
  height: 300px;
  width: 300px;
  position: relative;
  transform: scale(1);
}

.circle {
  background-color: var(--circle-color);
  height: 100%;
  width: 100%;
  border-radius: 50%;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
}

.gradient-circle {
  background: conic-gradient(
    #55b755 0%,
    #4ca458 40%,
    #fff 40%,
    #fff 60%,
    #336d4b 60%,
    #2a5b39 100%
  );
  height: 320px;
  width: 320px;
  z-index: -2;
  border-radius: 50%;
  position: absolute;
  top: -10px;
  left: -10px;
}

.pointer {
  background-color: #fff;
  border-radius: 50%;
  height: 20px;
  width: 20px;
  display: block;
}

.pointer-container {
  position: absolute;
  top: -40px;
  left: 140px;
  width: 20px;
  height: 190px;
  animation: rotate 7.5s linear forwards infinite;
  transform-origin: bottom center;
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(360deg);
  }
}

.container.grow {
  animation: grow 3s linear forwards;
}

@keyframes grow {
  from {
    transform: scale(1);
  }

  to {
    transform: scale(1.2);
  }
}

.container.shrink {
  animation: shrink 3s linear forwards;
}

@keyframes shrink {
  from {
    transform: scale(1.2);
  }

  to {
    transform: scale(1);
  }
}
